--- ../src-base/minecraft/net/minecraft/world/gen/structure/MapGenStructure.java
+++ ../src-work/minecraft/net/minecraft/world/gen/structure/MapGenStructure.java
@@ -18,6 +18,11 @@
 import net.minecraft.world.chunk.ChunkPrimer;
 import net.minecraft.world.gen.MapGenBase;
 
+import net.minecraft.entity.Entity;
+import carpet.carpetclient.CarpetClientMarkers;
+import net.minecraft.nbt.NBTTagList;
+import net.minecraft.util.math.MathHelper;
+
 public abstract class MapGenStructure extends MapGenBase
 {
     private MapGenStructureData field_143029_e;
@@ -295,4 +300,34 @@
 
         return null;
     }
+
+    // Retrieval method to get the bounding boxes CARPET-XCOM
+    public NBTTagList getBoundingBoxes(Entity entity, int type)
+    {
+        NBTTagList nbttaglist = new NBTTagList();
+        ObjectIterator objectiterator = this.field_75053_d.values().iterator();
+
+        while (objectiterator.hasNext())
+        {
+            StructureStart structurestart = (StructureStart)objectiterator.next();
+            if(MathHelper.func_76133_a(new ChunkPos(structurestart.func_143019_e(), structurestart.func_143018_f()).func_185327_a(entity)) > 700)
+            {
+                continue;
+            }
+            NBTTagCompound tagCompound = new NBTTagCompound();
+            Iterator<StructureComponent> iterator = structurestart.func_186161_c().iterator();
+            tagCompound.func_74768_a("type", CarpetClientMarkers.OUTER_BOUNDING_BOX);
+            tagCompound.func_74782_a("bb", structurestart.func_75071_a().func_151535_h() );
+            nbttaglist.func_74742_a(tagCompound);
+            while (iterator.hasNext())
+            {
+                NBTTagCompound compound = new NBTTagCompound();
+                StructureComponent structurecomponent = iterator.next();
+                compound.func_74768_a("type", type);
+                compound.func_74782_a("bb", structurecomponent.func_74874_b().func_151535_h() );
+                nbttaglist.func_74742_a(compound);
+            }
+        }
+        return nbttaglist;
+    }
 }

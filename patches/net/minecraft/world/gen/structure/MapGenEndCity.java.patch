--- ../src-base/minecraft/net/minecraft/world/gen/structure/MapGenEndCity.java
+++ ../src-work/minecraft/net/minecraft/world/gen/structure/MapGenEndCity.java
@@ -7,11 +7,22 @@
 import net.minecraft.world.chunk.ChunkPrimer;
 import net.minecraft.world.gen.ChunkGeneratorEnd;
 
+import com.google.common.collect.Lists;
+
+import net.minecraft.entity.monster.EntityShulker;
+import java.util.List;
+import net.minecraft.world.biome.Biome;
+import net.minecraft.world.biome.Biome.SpawnListEntry;
+
+import carpet.CarpetServer;
+import carpet.CarpetSettings;
+
 public class MapGenEndCity extends MapGenStructure
 {
     private final int field_186131_a = 20;
     private final int field_186132_b = 11;
     private final ChunkGeneratorEnd field_186133_d;
+    private static final List<Biome.SpawnListEntry> spawnList = Lists.<Biome.SpawnListEntry>newArrayList();
 
     public MapGenEndCity(ChunkGeneratorEnd p_i46665_1_)
     {
@@ -40,7 +51,9 @@
 
         int k = p_75047_1_ / 20;
         int l = p_75047_2_ / 20;
-        Random random = this.field_75039_c.func_72843_D(k, l, 10387313);
+        Random random = CarpetSettings.endRNG ?
+        		CarpetServer.setRandomSeed(k, l, 10387313) :
+        		this.field_75039_c.func_72843_D(k, l, 10387313);
         k = k * 20;
         l = l * 20;
         k = k + (random.nextInt(9) + random.nextInt(9)) / 2;
@@ -134,7 +147,26 @@
 
             public boolean func_75069_d()
             {
-                return this.field_186163_c;
+                // Needs to return true for end cities to regenerate properly. CARPET-XCOM
+                if(CarpetSettings.shulkerSpawningInEndCities){
+                    return true;
+                }else{return this.field_186163_c;
             }
         }
 }
+    // Method to edit shulkers spawning in end cities or remove them from the list. CARPET-XCOM
+    public static void shulkerSpawning(boolean spawnShulkers)
+    {
+        if(spawnShulkers)
+        {
+            spawnList.add(new Biome.SpawnListEntry(EntityShulker.class, 10, 4, 4));
+        }
+        else
+        {
+            spawnList.clear();
+        }
+    }
+    public List<SpawnListEntry> getSpawnList() {
+        return spawnList;
+    }
+}
